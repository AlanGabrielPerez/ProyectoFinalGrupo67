/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoFinal.views;

import java.time.LocalDate;
import javax.swing.table.DefaultTableModel;
import proyectoFinal.AccessData.AlojamientoData;
import proyectoFinal.Entidades.Alojamiento;
import proyectoFinal.Entidades.Ciudad;
import proyectoFinal.Entidades.Paquete;

public class PresupuestoV2 extends javax.swing.JInternalFrame {

    private AlojamientoData ad = new AlojamientoData();
    private Paquete paquete =  new Paquete();

    private static DefaultTableModel modelo = new DefaultTableModel() {

        public boolean isCellEditable(int fila, int columna) {

            return false;
        }
    };
        
    public PresupuestoV2() {
        initComponents();
        Ciudad caba = new Ciudad("CABA","Buenos Aires","Argentina",true,LocalDate.of(2000,11, 30),LocalDate.of(2000,4, 1),LocalDate.of(2000,12, 1));
        paquete.setDestino(caba);
        TiposAlojamientos();
        armarCabecera();
        jrPorProvincia.setSelected(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jrPorCiudad = new javax.swing.JRadioButton();
        jrPorProvincia = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jcbTipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jbSiguiente = new javax.swing.JButton();
        jbAtras = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);

        jrPorCiudad.setText("Por Ciudad");
        jrPorCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrPorCiudadActionPerformed(evt);
            }
        });

        jrPorProvincia.setText("Por provincia");
        jrPorProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrPorProvinciaActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jcbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel1.setText("Tipo");

        jbSiguiente.setText("Siguiente");
        jbSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSiguienteActionPerformed(evt);
            }
        });

        jbAtras.setText("Atras");
        jbAtras.setPreferredSize(new java.awt.Dimension(83, 32));
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Paso 2:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("- Seleccionar Alojamiento -");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jrPorCiudad)
                        .addGap(95, 95, 95)
                        .addComponent(jrPorProvincia)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbSiguiente)
                                .addGap(9, 9, 9))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel3)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrPorCiudad)
                    .addComponent(jrPorProvincia))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrPorProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrPorProvinciaActionPerformed
        if(jrPorProvincia.isSelected()){
            jrPorCiudad.setSelected(false);
            cargarTabla();
           
        }else{
            jrPorCiudad.setSelected(true);
            cargarTabla();
        }
    }//GEN-LAST:event_jrPorProvinciaActionPerformed

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSiguienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbSiguienteActionPerformed

    private void jrPorCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrPorCiudadActionPerformed
        if (jrPorCiudad.isSelected()){
            jrPorProvincia.setSelected(false);
            cargarTabla();
        }else {
             jrPorProvincia.setSelected(true);
             cargarTabla();
        }
        
    }//GEN-LAST:event_jrPorCiudadActionPerformed

    private void jcbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoActionPerformed
       cargarTabla();
    }//GEN-LAST:event_jcbTipoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbSiguiente;
    private javax.swing.JComboBox<String> jcbTipo;
    private javax.swing.JRadioButton jrPorCiudad;
    private javax.swing.JRadioButton jrPorProvincia;
    // End of variables declaration//GEN-END:variables

    private void TiposAlojamientos(){
        String[] tipos = {"Hostel","Hotel","Cabaña","Departamento"};
        jcbTipo.addItem("-Seleccione-");
        for (String t:tipos){
            jcbTipo.addItem(t);
        }    
    }
        
    private void armarCabecera() {
        modelo.setColumnCount(0);
        modelo.addColumn("Tipo");
        modelo.addColumn("Ciudad");
        modelo.addColumn("Provincia");
        modelo.addColumn("Valor diario");
        
        jTable.setModel(modelo);
    }
    
    private void cargarTabla(){
       /*
        modelo.setRowCount(0);
        for(Alojamiento a: ad.listaAlojamiento()){
            Ciudad c = a.getCiudadDestino();
            System.out.println(a.getTipoAlojamiento());
            modelo.addRow(new Object[]{a.getTipoAlojamiento(),c.getNombre(),c.getProvincia(),a.getImporteDiario()});
        }
      */
       
        modelo.setRowCount(0);
        if (jrPorCiudad.isSelected()){
    
            for (Alojamiento a: ad.listaAlojamiento()){
                Ciudad c = a.getCiudadDestino();
                if (jcbTipo.getSelectedIndex()==0){                    
                    if(c.getNombre().equals(paquete.getDestino().getNombre())){                     
                        modelo.addRow(new Object[]{a.getTipoAlojamiento(),c.getNombre(),c.getProvincia(),a.getImporteDiario()});
                    }
                }else {
                    if (c.getNombre().equals(paquete.getDestino().getNombre())&& a.getTipoAlojamiento().equals((String)jcbTipo.getSelectedItem())){
                     modelo.addRow(new Object[]{a.getTipoAlojamiento(),c.getNombre(),c.getProvincia(),a.getImporteDiario()});                    
                    }
                }
            }
        
        }else{
               
                for (Alojamiento a: ad.listaAlojamiento()){
                Ciudad c = a.getCiudadDestino();
                if (jcbTipo.getSelectedIndex()==0){
                    if(c.getProvincia().equals(paquete.getDestino().getProvincia())){
                        modelo.addRow(new Object[]{a.getTipoAlojamiento(),c.getNombre(),c.getProvincia(),a.getImporteDiario()});
                    }
                }else {
                    if (c.getProvincia().equals(paquete.getDestino().getProvincia())&& a.getTipoAlojamiento().equals((String)jcbTipo.getSelectedItem())){
                        modelo.addRow(new Object[]{a.getTipoAlojamiento(),c.getNombre(),c.getProvincia(),a.getImporteDiario()});                    
                    }
                }
            }
            
        }
        
       
    
    }


}
