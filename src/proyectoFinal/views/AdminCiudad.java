/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoFinal.views;

import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import javax.swing.JOptionPane;
import proyectoFinal.AccessData.CiudadData;
import proyectoFinal.Entidades.Ciudad;

/**
 *
 * @author julian
 */
public class AdminCiudad extends javax.swing.JInternalFrame {
    CiudadData cd = new CiudadData();
    /**
     * Creates new form AdminCiudad
     */
    public AdminCiudad() {
        initComponents();
        jrInactivo.setSelected(true);
        jrVerano.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jtfIngreseId = new javax.swing.JTextField();
        jbBuscarCiudad = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jtfIngreseProvincia = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jbCiudadGuardar = new javax.swing.JButton();
        jbCiudadModificar = new javax.swing.JButton();
        jbCiudadNuevo = new javax.swing.JButton();
        jbCiudadSalir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jEliminar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jrActivo = new javax.swing.JRadioButton();
        jrInactivo = new javax.swing.JRadioButton();
        jrInvierno = new javax.swing.JRadioButton();
        jrVerano = new javax.swing.JRadioButton();

        setClosable(true);
        setTitle("Administrar ciudades");

        jLabel2.setText("ID");

        jtfIngreseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIngreseIdActionPerformed(evt);
            }
        });
        jtfIngreseId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfIngreseIdKeyTyped(evt);
            }
        });

        jbBuscarCiudad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/lupa16.png"))); // NOI18N
        jbBuscarCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarCiudadActionPerformed(evt);
            }
        });

        jLabel3.setText("Ciudad");

        jLabel4.setText("Provincia");

        jLabel5.setText("Pais");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jtfIngreseProvincia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfIngreseProvinciaKeyTyped(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jbCiudadGuardar.setText("Guardar");
        jbCiudadGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCiudadGuardarActionPerformed(evt);
            }
        });

        jbCiudadModificar.setText("Modificar");
        jbCiudadModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCiudadModificarActionPerformed(evt);
            }
        });

        jbCiudadNuevo.setText("Nuevo");
        jbCiudadNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCiudadNuevoActionPerformed(evt);
            }
        });

        jbCiudadSalir.setText("Salir");
        jbCiudadSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCiudadSalirActionPerformed(evt);
            }
        });

        jLabel6.setText("Temporada Alta");

        jEliminar.setText("Eliminar");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });

        jLabel9.setText("Estado");

        jrActivo.setText("Activa");
        jrActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrActivoActionPerformed(evt);
            }
        });

        jrInactivo.setText("Inactiva");
        jrInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInactivoActionPerformed(evt);
            }
        });

        jrInvierno.setText("Invierno");
        jrInvierno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInviernoActionPerformed(evt);
            }
        });

        jrVerano.setText("Verano");
        jrVerano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrVeranoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jbCiudadGuardar)
                        .addGap(31, 31, 31)
                        .addComponent(jbCiudadModificar)
                        .addGap(32, 32, 32)
                        .addComponent(jbCiudadNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jEliminar)
                        .addGap(33, 33, 33)
                        .addComponent(jbCiudadSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jtfIngreseId, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28)
                                    .addComponent(jbBuscarCiudad))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jtfIngreseProvincia, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrInvierno)
                                .addGap(55, 55, 55)
                                .addComponent(jrVerano)
                                .addGap(3, 3, 3))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addGap(46, 46, 46)
                        .addComponent(jrActivo)
                        .addGap(65, 65, 65)
                        .addComponent(jrInactivo)
                        .addGap(75, 75, 75)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBuscarCiudad)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2))
                    .addComponent(jtfIngreseId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfIngreseProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrActivo)
                    .addComponent(jrInactivo)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrInvierno)
                    .addComponent(jrVerano)
                    .addComponent(jLabel6))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCiudadModificar)
                    .addComponent(jbCiudadNuevo)
                    .addComponent(jbCiudadSalir)
                    .addComponent(jEliminar)
                    .addComponent(jbCiudadGuardar))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfIngreseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIngreseIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIngreseIdActionPerformed

    private void jbCiudadGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCiudadGuardarActionPerformed
        if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jtfIngreseProvincia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Rellene correctamente los campos");
        } else {
            Ciudad ciudad = new Ciudad();
            ciudad.setEstado(jrActivo.isSelected());
            ciudad.setNombre(jTextField1.getText());
            ciudad.setPais(jTextField2.getText());
            ciudad.setProvincia(jtfIngreseProvincia.getText());
            setFechas(ciudad);
            cd.guardarCiudad(ciudad);
        }
    }//GEN-LAST:event_jbCiudadGuardarActionPerformed

    private void jbBuscarCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarCiudadActionPerformed
        if (jtfIngreseId.getText() != "") {
            int id = Integer.parseInt(jtfIngreseId.getText());
            if (comprobar(Integer.parseInt(jtfIngreseId.getText())) || comprobarInactivo(Integer.parseInt(jtfIngreseId.getText()))) {
                cd.ciudadId(id);
                jTextField1.setText(cd.ciudadId(id).getNombre());
                jtfIngreseProvincia.setText(cd.ciudadId(id).getProvincia());
                jTextField2.setText(cd.ciudadId(id).getPais());
                if (cd.ciudadId(id).getTemAlta().getMonthValue() == 1) {
                    jrVerano.setSelected(true);
                    jrInvierno.setSelected(false);
                } else {
                    jrVerano.setSelected(false);
                    jrInvierno.setSelected(true);
                }
                if (cd.ciudadId(id).isEstado()){
                    jrActivo.setSelected(true);
                    jrInactivo.setSelected(false);
                }else{
                    jrActivo.setSelected(false);
                    jrInactivo.setSelected(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un id correcto");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese un id en el campo");
        }
    }//GEN-LAST:event_jbBuscarCiudadActionPerformed

    private void jbCiudadNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCiudadNuevoActionPerformed
       jTextField1.setText("");
       jTextField2.setText("");
       jtfIngreseId.setText("");
       jtfIngreseProvincia.setText("");
       jrVerano.setSelected(true);
       jrInvierno.setSelected(false);
       jrActivo.setSelected(false);
       jrInactivo.setSelected(true);
    }//GEN-LAST:event_jbCiudadNuevoActionPerformed

    private void jbCiudadSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCiudadSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbCiudadSalirActionPerformed

    private void jbCiudadModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCiudadModificarActionPerformed

        if (jtfIngreseId.getText() != "") {
            if (comprobar(Integer.parseInt(jtfIngreseId.getText())) || comprobarInactivo(Integer.parseInt(jtfIngreseId.getText()))) {
                if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jtfIngreseProvincia.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Rellene los campos faltantes o use buscar por ID");
                } else {
                    Ciudad ciudad = new Ciudad();
                    ciudad.setNombre(jTextField1.getText());
                    ciudad.setPais(jTextField1.getText());
                    ciudad.setProvincia(jtfIngreseProvincia.getText());
                    setFechas(ciudad);
                    ciudad.setIdCiudad(Integer.parseInt(jtfIngreseId.getText()));
                    if (jrActivo.isSelected()) {
                        ciudad.setEstado(true);
                        cd.modificarCiudad(ciudad);
                    } else {
                        ciudad.setEstado(cd.ciudadId(ciudad.getIdCiudad()).isEstado());
                        JOptionPane.showMessageDialog(this, "si desea borrar utilice el boton de borrado");
                        jrActivo.setSelected(cd.ciudadId(ciudad.getIdCiudad()).isEstado());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un valor existente");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese algun valor en el campo ID");
        }
    }//GEN-LAST:event_jbCiudadModificarActionPerformed

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
       if (jtfIngreseId.getText() == null ){
       JOptionPane.showMessageDialog(this, "Rellene el campo de id");
       } else if (comprobar(Integer.parseInt(jtfIngreseId.getText())) || comprobarInactivo(Integer.parseInt(jtfIngreseId.getText()))) {
        Ciudad ciudad = new Ciudad();    
          ciudad.setIdCiudad(Integer.parseInt(jtfIngreseId.getText()));
          cd.eliminarCiudad(Integer.parseInt(jtfIngreseId.getText()));
          jrActivo.setSelected(false);
       } else {
         JOptionPane.showMessageDialog(this, "Utilice un id correcto");
       } 
    }//GEN-LAST:event_jEliminarActionPerformed

    private void jrActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrActivoActionPerformed
        if (jrActivo.isSelected()){
            jrInactivo.setSelected(false);
        }else{
            jrInactivo.setSelected(true);
        }
    }//GEN-LAST:event_jrActivoActionPerformed

    private void jrInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInactivoActionPerformed
        if (jrInactivo.isSelected()){
            jrActivo.setSelected(false);
        }else{
            jrActivo.setSelected(true);
        }
    }//GEN-LAST:event_jrInactivoActionPerformed

    private void jrInviernoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInviernoActionPerformed
        if(jrInvierno.isSelected()){
            jrVerano.setSelected(false);
        }else{
            jrVerano.setSelected(true);
        }
    }//GEN-LAST:event_jrInviernoActionPerformed

    private void jrVeranoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrVeranoActionPerformed
        if (jrVerano.isSelected()){
            jrInvierno.setSelected(false);
        }else{
            jrInvierno.setSelected(true);
        }
    }//GEN-LAST:event_jrVeranoActionPerformed

    private void jtfIngreseIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfIngreseIdKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfIngreseIdKeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jtfIngreseProvinciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfIngreseProvinciaKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfIngreseProvinciaKeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jEliminar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jbBuscarCiudad;
    private javax.swing.JButton jbCiudadGuardar;
    private javax.swing.JButton jbCiudadModificar;
    private javax.swing.JButton jbCiudadNuevo;
    private javax.swing.JButton jbCiudadSalir;
    private javax.swing.JRadioButton jrActivo;
    private javax.swing.JRadioButton jrInactivo;
    private javax.swing.JRadioButton jrInvierno;
    private javax.swing.JRadioButton jrVerano;
    private javax.swing.JTextField jtfIngreseId;
    private javax.swing.JTextField jtfIngreseProvincia;
    // End of variables declaration//GEN-END:variables

    private boolean comprobarInactivo(int id) {
        boolean ok = false;
        for (Ciudad c : cd.ciudadesInactivas()) {
            if (c.getIdCiudad() == id) {
                ok = true;
                break;
            }
        }
        return ok;
    }

    private boolean comprobar(int id) {
        boolean ok = false;
        for (Ciudad c : cd.listarCiudad()) {
            if (c.getIdCiudad() == id) {
                ok = true;
                break;
            }
        }
        return ok;
    }
    
    private void setFechas(Ciudad c){
    
        if (jrVerano.isSelected()){
            c.setTemAlta(LocalDate.of(2000,1, 1));
            c.setTemMedia(LocalDate.of(2000,9, 1));
            c.setTemBaja(LocalDate.of(2000,5, 1));
        }else{
            c.setTemAlta(LocalDate.of(2000,5, 1));
            c.setTemMedia(LocalDate.of(2000,1, 1));
            c.setTemBaja(LocalDate.of(2000,9, 1));
        }
    
    }
    
}
