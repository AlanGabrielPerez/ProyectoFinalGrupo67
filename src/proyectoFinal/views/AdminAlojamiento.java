/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoFinal.views;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import proyectoFinal.AccessData.AlojamientoData;
import proyectoFinal.AccessData.CiudadData;
import proyectoFinal.Entidades.Alojamiento;
import proyectoFinal.Entidades.Ciudad;

/**
 *
 * @author julian
 */
public class AdminAlojamiento extends javax.swing.JInternalFrame {

    private AlojamientoData aloja = new AlojamientoData();
    private CiudadData ciu = new CiudadData();


    public AdminAlojamiento() {
        initComponents();
        agregarCiudad();
        TiposAlojamientos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbAlojamientoGuardar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbAlojamientoSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbAlojamientoModificar = new javax.swing.JButton();
        jbAlojamientoNuevo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtID = new javax.swing.JTextField();
        jcbTipo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jcDesayuno = new javax.swing.JCheckBox();
        jcAlmuerzo = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jtImporte = new javax.swing.JTextField();
        jcCena = new javax.swing.JCheckBox();
        jComboBoxCiudad = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jrActivo = new javax.swing.JRadioButton();
        jrInactivo = new javax.swing.JRadioButton();

        setClosable(true);
        setTitle("Administar alojamiento");

        jbAlojamientoGuardar.setText("Guardar");
        jbAlojamientoGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlojamientoGuardarActionPerformed(evt);
            }
        });

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/lupa16.png"))); // NOI18N
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbAlojamientoSalir.setText("Salir");
        jbAlojamientoSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlojamientoSalirActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Lugar");

        jLabel4.setText("Categoria");

        jbAlojamientoModificar.setText("Modificar");
        jbAlojamientoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlojamientoModificarActionPerformed(evt);
            }
        });

        jbAlojamientoNuevo.setText("Nuevo");
        jbAlojamientoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlojamientoNuevoActionPerformed(evt);
            }
        });

        jLabel5.setText(" ID");

        jtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtIDKeyTyped(evt);
            }
        });

        jLabel6.setText("Servicios ");

        jcDesayuno.setText("Desayuno");

        jcAlmuerzo.setText("Almuerzo");

        jLabel7.setText("Importe diario");

        jtImporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtImporteKeyTyped(evt);
            }
        });

        jcCena.setText("Cena");

        jLabel1.setText("Estado");

        jrActivo.setText("Activo");
        jrActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrActivoActionPerformed(evt);
            }
        });

        jrInactivo.setText("Inactivo");
        jrInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInactivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jbAlojamientoGuardar)
                .addGap(53, 53, 53)
                .addComponent(jbAlojamientoModificar)
                .addGap(69, 69, 69)
                .addComponent(jbAlojamientoNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAlojamientoSalir)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jbBuscar))
                            .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcDesayuno)
                                .addGap(24, 24, 24)
                                .addComponent(jcAlmuerzo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcCena, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrActivo)
                                .addGap(35, 35, 35)
                                .addComponent(jrInactivo))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcDesayuno)
                    .addComponent(jcAlmuerzo)
                    .addComponent(jcCena))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jrActivo)
                    .addComponent(jrInactivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlojamientoGuardar)
                    .addComponent(jbAlojamientoModificar)
                    .addComponent(jbAlojamientoNuevo)
                    .addComponent(jbAlojamientoSalir))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAlojamientoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlojamientoGuardarActionPerformed
        String servicio;

        if (jtNombre.getText().isEmpty() || jcbTipo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Rellene correctamente los campos");

        } else {
            Alojamiento alojamiento = new Alojamiento();
            Ciudad c = (Ciudad) jComboBoxCiudad.getSelectedItem();
            alojamiento.setCiudadDestino(c);
            alojamiento.setEstado(true);
            alojamiento.setNombre(jtNombre.getText());
            alojamiento.setImporteDiario(Double.parseDouble(jtImporte.getText()));
            alojamiento.setTipoAlojamiento((String) jcbTipo.getSelectedItem());

            double importeSuma = alojamiento.getImporteDiario();

            // Verificar qué servicios de comida se seleccionaron
            servicio = "";
            if (jcDesayuno.isSelected()) {
                servicio += ("Desayuno- ");
                importeSuma += 500;
            }
            if (jcAlmuerzo.isSelected()) {
                servicio += (" Almuerzo- ");
                importeSuma += 500;
            }
            if (jcCena.isSelected()) {
                servicio += (" Cena");
                importeSuma += 500;
            }

            alojamiento.setImporteDiario(importeSuma);

            if (servicio.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Seleccione al menos un servicio de comida");
            } else {
                alojamiento.setServicio(servicio);
                aloja.guardarAlojamiento(alojamiento);
                JOptionPane.showMessageDialog(this, "Usted eligió: " + servicio);

            }

        }


    }//GEN-LAST:event_jbAlojamientoGuardarActionPerformed

    private void jbAlojamientoSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlojamientoSalirActionPerformed
      
    dispose();

    }//GEN-LAST:event_jbAlojamientoSalirActionPerformed

    private void jbAlojamientoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlojamientoNuevoActionPerformed

        jtID.setText("");
        jtNombre.setText("");
        jComboBoxCiudad.setSelectedIndex(-1);
        jcbTipo.setSelectedIndex(-1);
        jcDesayuno.setSelected(false);
        jcAlmuerzo.setSelected(false);
        jcCena.setSelected(false);
        jtImporte.setText("");
        jcAlmuerzo.setIcon(null);
        jcCena.setIcon(null);
        jcDesayuno.setIcon(null);

    }//GEN-LAST:event_jbAlojamientoNuevoActionPerformed

    private void jbAlojamientoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlojamientoModificarActionPerformed

        if (jtID.getText().isEmpty()){ 
            JOptionPane.showMessageDialog(this, "Ingrese id del alojamiento a modificar.\n*se recomientda utilizar el boton de busqueda");
            
        } else {
             int id =Integer.parseInt(jtID.getText());
             if (comprobar(id)||comprobarInactivos(id)) {
                if (jtNombre.getText().isEmpty()|| jtImporte.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Rellene los campos faltantes o use buscar por ID");

                } else {

                    Alojamiento alojamiento = new Alojamiento();

                    
                    alojamiento.setIdAlojamiento(Integer.parseInt(jtID.getText()));
                    alojamiento.setNombre(jtNombre.getText());
                    alojamiento.setCiudadDestino((Ciudad) jComboBoxCiudad.getSelectedItem());
                    alojamiento.setTipoAlojamiento((String) jcbTipo.getSelectedItem());

                    double importeSuma = Double.parseDouble(jtImporte.getText());
                    String servicio = "";

                    if (jcDesayuno.isSelected()) {
                        servicio += ("Desayuno- ");
                        importeSuma += 500;

                    }
                    if (jcAlmuerzo.isSelected()) {
                        servicio += (" Almuerzo- ");
                        importeSuma += 500;
                    }
                    if (jcCena.isSelected()) {
                        servicio += (" Cena");
                        importeSuma += 500;
                    }

                    alojamiento.setServicio(servicio);

                    alojamiento.setImporteDiario(importeSuma);
                    
                    alojamiento.setEstado(jrActivo.isSelected());

                    aloja.modificarAlojamiento(alojamiento);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un valor existente");
            }
        }


    }//GEN-LAST:event_jbAlojamientoModificarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jtID.getText() != "") {
            int id = Integer.parseInt(jtID.getText());
            if (comprobar(id) || comprobarInactivos(id)) {
                Alojamiento alojamiento = aloja.alojamientoId(id);

                jtNombre.setText(alojamiento.getNombre());
                jtNombre.setEditable(false);
                
                jComboBoxCiudad.getModel().setSelectedItem(alojamiento.getCiudadDestino());
                jcbTipo.getModel().setSelectedItem(alojamiento.getTipoAlojamiento());

                jtImporte.setText(alojamiento.getImporteDiario() + "");

                jrActivo.setSelected(alojamiento.isEstado());
                
                setServicios(alojamiento);
                
                
                

            } else {
                JOptionPane.showMessageDialog(this, "No se encontro alojamiento ID: " + id);
            }
        }


    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jrActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrActivoActionPerformed
        if (jrActivo.isSelected()) {
            jrInactivo.setSelected(false);
        }else {
            jrInactivo.setSelected(true);
            jrInactivoActionPerformed(evt);
        }
    }//GEN-LAST:event_jrActivoActionPerformed

    private void jrInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInactivoActionPerformed
       if (jrInactivo.isSelected()) {
            jrActivo.setSelected(false);
        }else{
            jrActivo.setSelected(true);
            jrActivoActionPerformed(evt);
        }
    }//GEN-LAST:event_jrInactivoActionPerformed

    private void jtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIDKeyTyped
           int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jtIDKeyTyped

    private void jtImporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtImporteKeyTyped
        int key = evt.getKeyChar();
        boolean numero = ((key >= 48 && key <= 57) || key == 46);
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_jtImporteKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Ciudad> jComboBoxCiudad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbAlojamientoGuardar;
    private javax.swing.JButton jbAlojamientoModificar;
    private javax.swing.JButton jbAlojamientoNuevo;
    private javax.swing.JButton jbAlojamientoSalir;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JCheckBox jcAlmuerzo;
    private javax.swing.JCheckBox jcCena;
    private javax.swing.JCheckBox jcDesayuno;
    private javax.swing.JComboBox<String> jcbTipo;
    private javax.swing.JRadioButton jrActivo;
    private javax.swing.JRadioButton jrInactivo;
    private javax.swing.JTextField jtID;
    private javax.swing.JTextField jtImporte;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables

    private void agregarCiudad() {        
        for (Ciudad c : ciu.listarCiudad()) {
            jComboBoxCiudad.addItem(c);
        }
        for (Ciudad c: ciu.ciudadesInactivas()){
            jComboBoxCiudad.addItem(c);
        }
    }

    private boolean comprobar(int id) {
        boolean ok = false;
        for (Alojamiento a : aloja.listaAlojamiento()) {
            if (a.getIdAlojamiento() == id) {

                ok = true;
                break;
            }
        }
        return ok;
    }

    private boolean comprobarInactivos(int id) {
        boolean ok = false;
        for (Alojamiento a2 : aloja.alojamientoInactivo()) {
            if (a2.getIdAlojamiento() == id) {
                ok = true;
                break;
            }
        }
        return ok;
    }

    private void TiposAlojamientos() {
        String[] tipos = {"Hostel", "Hotel", "Cabaña", "Departamento"};
        for (String t : tipos) {
            jcbTipo.addItem(t);
        }
    }

    private void setServicios(Alojamiento a) {
        ImageIcon casilla = new ImageIcon("src/Icons/casilla16.png");
        ImageIcon marcada = new ImageIcon("src/Icons/casillaMarcada16.png");

        if (a.getServicio().contains("Desayuno")) {
            jcDesayuno.setIcon(marcada);
        } else {
            jcDesayuno.setIcon(casilla);
        }
        if (a.getServicio().contains("Almuerzo")) {
            jcAlmuerzo.setIcon(marcada);
        } else {
            jcAlmuerzo.setIcon(casilla);
        }
        if (a.getServicio().contains("Cena")) {
            jcCena.setIcon(marcada);
        } else {
            jcCena.setIcon(casilla);
        }
    }

}
